0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/6.5.0/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.10.3
3 info using node@v6.5.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/nskryabin/Git/eventz',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/nskryabin/.npm/eventz/1.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/nskryabin/.npm correctMkdir not in flight; initializing
10 info lifecycle eventz@1.0.0~prepublish: eventz@1.0.0
11 silly lifecycle eventz@1.0.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/nskryabin/.npm/eventz/1.0.0/package.tgz',
12 verbose tar pack   '/Users/nskryabin/Git/eventz' ]
13 verbose tarball /Users/nskryabin/.npm/eventz/1.0.0/package.tgz
14 verbose folder /Users/nskryabin/Git/eventz
15 verbose addLocalTarball adding from inside cache /Users/nskryabin/.npm/eventz/1.0.0/package.tgz
16 verbose correctMkdir /Users/nskryabin/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd eventz@1.0.0
18 verbose afterAdd /Users/nskryabin/.npm/eventz/1.0.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/nskryabin/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/nskryabin/.npm/eventz/1.0.0/package/package.json written
21 silly publish { name: 'eventz',
21 silly publish   version: '1.0.0',
21 silly publish   description: 'Dependencyless simple ES6/5 event machine inspired by `$.Callbacks`',
21 silly publish   main: 'index.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   keywords: [ 'events', 'event', 'eventmachine' ],
21 silly publish   author: { name: 'nicholasrq', email: 'nr@fenelon.ru' },
21 silly publish   license: 'ISC',
21 silly publish   readme: '# Eventz\n\nAsync events inspired by `$.Callbacks` and written in ES6\n\n# Install\n\n```bash\n$ npm install eventz --save\n```\n\n# Usage\n\nThere are two ways to use `Eventz`:\n\n  1. You can invoke `new Events(eventsList[, options])` by itslef\n  2. You can extend your own class from `Eventz`\n\n## Self-invoking\n\n```javascript\nimport Eventz from \'eventz\'\n\n// Create instance of Eventz\nconst events = new Eventz([\n  \'helloSaid\',\n  \'goodbyeSaid\'\n])\n\n// Attach event handlers\nevents.on(\'helloSaid\', function(){\n  console.log(\'hello said\')\n})\n\nevents.on(\'goodbyeSaid\', function(){\n  console.log(\'hello said\')\n})\n\n// Invoke events\n\nevents.emit(\'helloSaid\')\n\nevents.emit(\'goodbyeSaid\')\n```\n\n### Constructor options\n\nYou can pass setup object as a second argument of the constructor.\n\nAvailable options:\n\n  * `context` – all the handlers will be invoked with this context, defaults to `Eventz` instance \n  * `expose`  – if true then `Eventz` will expose methods like `.on()` and `.emit()` to selected context\n\n## Extending class\n\n```javascript\nimport Eventz from \'eventz\'\n\n// Create your own class\nclass MyClass extends Eventz{\n  \n  eventsList = [\n    \'helloSaid\',\n    \'goodbyeSaid\'\n  ];\n\n  invokeAllEvents(){\n    this.emit(\'helloSaid\')\n\n    this.emit(\'goodbyeSaid\')  \n  }\n\n}\n\n// Create instance of your class\nconst cls = new MyClass\n\n// Now you can attach events directly\n// to instance of your class\ncls.on(\'helloSaid\', function(){\n  console.log(\'hello said\')\n})\n\ncls.on(\'goodbyeSaid\', function(){\n  console.log(\'hello said\')\n})\n\n// Invoke events from inside of class\ncls.invokeAllEvents()\n\n// Or invoke events directly\ncls.emit(\'helloSaid\')\n\ncls.emit(\'goodbyeSaid\')\n```\n\n## Event modifiers\n\nWhen setting up events list you may configure how each of your events\nwill behave. You\'ll have 3 options:\n\n* `once` – each handler will be invoked only once\n* `memory` – event handlers which were attached after event invokation will be called immediatelly\n* `stop` – will stop handlers execution if handler returns `false`\n\nOptions should be passed with events separated by semicolon: `[eventName]:[option1]:[option2]`, for example\n`helloSaid:once` or `goodbyeSaid:memory:stop`.\n\n```javascript\nimport Eventz from \'eventz\'\n\nconst events = new Eventz([\n  \'fireOnce:once\',\n  \'memorized:memory\',\n  \'shouldStop:stop\'\n])\n\n// Example of `once`\nevents.on(\'fireOnce\', function(){ console.log(\'Callback 1\') })\n\nevents.emit(\'fireOnce\')\n// => \'Callback 1\'\n\nevents.on(\'fireOnce\', function(){ console.log(\'Callback 2\') })\n\nevents.emit(\'fireOnce\')\n// => \'Callback 2\'\n\nevents.emit(\'fireOnce\') // nothing will happen, all handlers were invoked once\n\n// Example of `memory`\nevents.on(\'memorized\', function(){\n  console.log(\'Works just as normal\')\n})\n\nevents.emit(\'memorized\')\n// => Works just as normal\n\nevents.on(\'memorized\', function(){\n  console.log(\'Will be invoked immediatelly\')\n})\n// => Will be invoked immediatelly\n\n// Example of `stop`\n\n// works\nevents.on(\'shouldStop\', function(){ console.log(\'One\') })\n\n// also works but will stop everything after\nevents.on(\'shouldStop\', function(){ console.log(\'Two\'); return false })\n\n// will never work\nevents.on(\'shouldStop\', function(){ console.log(\'Three\') })\n\n// will never work\nevents.on(\'shouldStop\', function(){ console.log(\'Four\') })\n\nevents.emit(\'shouldStop\')\n```\n\n## Passing arguments\n\nYou can pass any arguments to the event handler while ivoking event\n\n```javascript\nevents.on(\'someEvent\', function(name, surname){\n  console.log(`I\'am ${name} ${surname}`)\n})\n\nevents.emit(\'someEvent\', \'Tim\', \'Cook\')\n// => I\'am Tim Cook\n```\n\n# Public methods\n\nThese methods will be available on `Eventz` instance or on the instance of class extended from `Eventz`.\n\n## `.on(eventNames, handlerFunction)`\n\nAttaches handler to `Eventz` instance\n\n* `eventNames` – one or more event names separated by space\n* `handlerFunction` – function which will be invoked after firing the event\n\n## `.off([eventNames, handlerFunction])`\n\nRemoves handler from `Eventz` instance. \n\nIf no arguments passed, then all the handlers for all the events will be removed\n\nIf no `handlerFunction` passed then all the handlers for specified events will be removed\n\n* `eventNames` – one or more event names separated by space\n* `handlerFunction` – function which will be invoked after firing the event\n\n## `.emit(eventNames, [...arguments])`\n\nInvokes specified event(s)\n\n* `eventNames` – one or more event names separated by space\n* `arguments` – any arguments to pass to handler when event was fired\n\n## License\nCopyright © 2016 Nicholas Strife <nr@fenelon.ru>\n\nThis work is free. You can redistribute it and/or modify it under the\nterms of the [MIT License](https://opensource.org/licenses/MIT).\nSee LICENSE for full details.\n',
21 silly publish   readmeFilename: 'readme.md',
21 silly publish   gitHead: '135a2566d906b264689c0be5108024e5b2a097ce',
21 silly publish   _id: 'eventz@1.0.0',
21 silly publish   _shasum: '7038105449ea42109aa555efb5f3a65f3d557ebf',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name eventz
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'eventz',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'eventz',
26 silly mapToRegistry   name: 'eventz',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/eventz
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/nskryabin/.npm/eventz/1.0.0/package.tgz
30 verbose request uri https://registry.npmjs.org/eventz
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 10:08:05
33 verbose request using bearer token for auth
34 verbose request id fdc5fb5771d9cc05
35 http request PUT https://registry.npmjs.org/eventz
36 http 403 https://registry.npmjs.org/eventz
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '100',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Thu, 03 Nov 2016 07:06:00 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-bma7031-BMA',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1478156759.053842,VS0,VE1254',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /Users/nskryabin/.npm/registry.npmjs.org/eventz on PUT
39 error publish Failed PUT 403
40 verbose stack Error: you do not have permission to publish "eventz". Are you logged in as the correct user? : eventz
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:200:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1067:10)
40 verbose stack     at emitOne (events.js:101:20)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:988:12)
41 verbose statusCode 403
42 verbose pkgid eventz
43 verbose cwd /Users/nskryabin/Git/eventz
44 error Darwin 16.1.0
45 error argv "/usr/local/Cellar/node/6.5.0/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.5.0
47 error npm  v3.10.3
48 error code E403
49 error you do not have permission to publish "eventz". Are you logged in as the correct user? : eventz
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
